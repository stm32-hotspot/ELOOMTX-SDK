
/**
 ******************************************************************************
 * @file    PushButtonDrv.h
 * @author  SRA - GPM
 * 
 * 
 *
 * @brief Handle the GPIO configured as EXTI connected to the user button 1.
 *
 *
 *********************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file in
 * the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *********************************************************************************
 */

#ifndef INC_DRIVERS_PUSHBUTTONDRV_H_
#define INC_DRIVERS_PUSHBUTTONDRV_H_

#ifdef __cplusplus
extern "C" {
#endif


#include "drivers/IDriver.h"
#include "drivers/IDriver_vtbl.h"
#include "mx.h"


/**
 * Create  type name for _PushButtonDrv_t.
 */
typedef struct _PushButtonDrvParams_t PushButtonDrvParams_t;

/**
 * Create  type name for _PushButtonDrv_t.
 */
typedef struct _PushButtonDrv_t PushButtonDrv_t;

/**
 * Initialization parameters for the driver.
 */
struct _PushButtonDrvParams_t
{
  /**
   * Specifies the peripheral HAL initialization parameters generated by CubeMX.
   */
  MX_GPIOParams_t *p_mx_gpio_cfg;

  /**
   * Specifies additional driver specific parameter.
   */
  uint32_t param;
};

/**
 *  PushButtonDrv_t internal structure.
 */
struct _PushButtonDrv_t
{
  /**
   * Base class object.
   */
  IDriver super;

  /* Driver variables should be added here. */

  /**
   * Specifies all the configuration parameters for the GPIO linked to
   * an instance of this class. It based on the HAL driver generated by CubeMX.
   */
  PushButtonDrvParams_t mx_handle;

};


/** Public API declaration */
/***************************/

/**
 * Allocate an instance of PushButtonDrv_t. The driver is allocated
 * in the FreeRTOS heap.
 *
 * @return a pointer to the generic interface ::IDriver if success,
 * or SYS_OUT_OF_MEMORY_ERROR_CODE otherwise.
 */
IDriver *PushButtonDrvAlloc(void);


/** Inline functions definition */
/********************************/


#ifdef __cplusplus
}
#endif

#endif /* INC_DRIVERS_PUSHBUTTONDRV_H_ */
